@using System.Text.Json
@{
    ResultsViewModel results = null;
    try
    {
        results = JsonSerializer.Deserialize<ResultsViewModel>(TempData["_results"]?.ToString());
    }
    catch (System.Exception) { }
}

@if (results != null)
{
    foreach (var result in results.Results)
    {
        var severity = "info";
        switch (result.Type)
        {
            case ResultType.Success:
                severity = "success";
                break;
            case ResultType.Warning:
                severity = "warning";
                break;
            case ResultType.Error:
                severity = "danger";
                break;
            default:
                break;
        }

        <div class="alert alert-@severity" role="alert">
            @if (string.IsNullOrEmpty(@result.DebugInfo))
            {
                <p class="mb-0">@result.Message</p>
            }
            else
            {
                <p class="mb-3">@result.Message</p>
                <pre class="alert-pre border bg-light p-2"><code>@result.DebugInfo</code></pre>
            }

            @if (@result.Exception != null)
            {
                <p class="mb-3">@result.Exception.Message</p>
                <pre class="alert-pre border bg-light p-2"><code>@result.Exception.StackTrace</code></pre>
            }
        </div>
    }
}